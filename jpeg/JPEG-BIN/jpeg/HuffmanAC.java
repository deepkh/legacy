/** JPEG Huffman AC Code Book implements by deepkh@gmail.com 2006-11-27 */
package jpeg;


public class HuffmanAC {

    public String getBinaryStringold(int code, int len) {
	int tmp = code & (int)(Math.pow(2, len)-1);
	StringBuffer str = new StringBuffer();
	for (int i=(len-1); i>=0; i--) {
	    if (code > 0)
		str.append(((tmp>>>i)&1));
	    else 
		str.append(((tmp>>>i+1)&1));
	}
	return str.toString();
    }

    public String getBinaryString(int code, int len) {
	int tmp = code & (int)(Math.pow(2, len)-1);
	int tmp2 = Math.abs(code);
	StringBuffer str = new StringBuffer();
	for (int i=(len-1); i>=0; i--) {
	    if (code > 0) {
		str.append(((tmp>>>i)&1));
	    } else {
		str.append((((tmp2>>>i)&1)+1)&1);
	    }
	}
	return str.toString();
    }

    public int getSize(int code) {
	for (int i=0; i<getCategory().length; i++)
	    if (code >= getCategory()[i][0] && code <= getCategory()[i][1])
		return i;
	return -1;
    }

    public String getHuffmanString(int code, int runlength) {
	int size = getSize(code);
//	System.out.println("("+runlength+","+size+") "+code+" ");
	String hufstr = getHuffman()[runlength][size] +
			getBinaryString(code, size);
//	System.out.println(hufstr);
	return hufstr;
    }

    public String[][] getHuffman() {
	return HUFFMAN;
    }

    public int[][] getCategory() {
	return CATEGORY;
    }
    

    static int[][] CATEGORY = new int[][] {
	{0,0},		    //0
	{-1,1},		    //1
	{-3,3},		    //2
	{-7,7},		    //3
	{-15,15},	    //4
	{-31,31},	    //5
	{-63,63},	    //6
	{-127,127},	    //7
	{-255,255},	    //8
	{-511,511},	    //9
	{-1023,1023},	    //10
    };

    /** Luminance AC Huffman */
    public static String[][] HUFFMAN = new String[][] {
	{"1010",				
	"00",					
	"01",					
	"100",				
	"1011",				
	"11010",			
	"1111000",			
	"11111000",			
	"1111110110",			
	"1111111110000010",		
	"1111111110000011"},
	{"",
	"1100",				
	"11011",			
	"1111001",			
	"111110110",			
	"11111110110",			
	"1111111110000100",			
	"1111111110000101",		
	"1111111110000110",		
	"1111111110000111",		
	"1111111110001000"},		
	{"",
	"11100",			
	"11111001",			
	"1111110111",			
	"111111110100",			
	"1111111110001001",		
	"1111111110001010",		
	"1111111110001011",		
	"1111111110001100",		
	"1111111110001101",		
	"1111111110001110"},			
	{"",
	"111010",			
	"111110111",
	"111111110101",
        "1111111110001111",
        "1111111110010000",
        "1111111110010001",
        "1111111110010010",
        "1111111110010011",
        "1111111110010100",
        "1111111110010101"},
	{"",
	"111011",			
	"1111111000",
	"1111111110010110",
	"1111111110010111",
	"1111111110011000",
	"1111111110011001",
	"1111111110011010",
	"1111111110011011",
	"1111111110011100",
	"1111111110011101"},
	{"",
	"1111010",			
	"11111110111",
	"1111111110011110",
	"1111111110011111",
	"1111111110100000",
	"1111111110100001",
	"1111111110100010",
	"1111111110100011",
	"1111111110100100",
	"1111111110100101"},
	{"",
	"1111011",			
	"111111110110",
        "1111111110100110",
        "1111111110100111",
        "1111111110101000",
        "1111111110101001",
        "1111111110101010",
        "1111111110101011",
        "1111111110101100",
        "1111111110101101"},
	{"",
	"11111010",			
	"111111110111",
	"1111111110101110",
	"1111111110101111",
	"1111111110110000",
	"1111111110110001",
	"1111111110110010",
	"1111111110110011",
	"1111111110110100",
	"1111111110110101"},
	{"",
	"111111000",				
	"111111111000000",
	"1111111110110110",
	"1111111110110111",
	"1111111110111000",
	"1111111110111001",
	"1111111110111010",
	"1111111110111011",
	"1111111110111100",
	"1111111110111101"},
	{"",
	"111111001",			
	"1111111110111110",
	"1111111110111111",
	"1111111111000000",
	"1111111111000001",
	"1111111111000010",
	"1111111111000011",
	"1111111111000100",
	"1111111111000101",
	"1111111111000110"},
	{"",
	"111111010",			
	"1111111111000111",
	"1111111111001000",
	"1111111111001001",
	"1111111111001010",
	"1111111111001011",
	"1111111111001100",
	"1111111111001101",
	"1111111111001110",
	"1111111111001111"},
	{"",
	"1111111001",			
	"1111111111010000",
	"1111111111010001",
	"1111111111010010",
	"1111111111010011",
	"1111111111010100",
	"1111111111010101",
	"1111111111010110",
	"1111111111010111",
	"1111111111011000"},
	{"",
	"1111111010",
	"1111111111011001",
	"1111111111011010",
	"1111111111011011",
	"1111111111011100",
	"1111111111011101",
	"1111111111011110",
	"1111111111011111",
	"1111111111100000",
	"1111111111100001"},
	{"",
	"11111111000",
	"1111111111100010",
	"1111111111100011",
	"1111111111100100",
	"1111111111100101",
	"1111111111100110",
	"1111111111100111",
	"1111111111101000",
	"1111111111101001",
	"1111111111101010"},
	{"",
	"1111111111101011",
	"1111111111101100",
	"1111111111101101",
	"1111111111101110",
	"1111111111101111",
	"1111111111110000",
	"1111111111110001",
	"1111111111110010",
	"1111111111110011",
	"1111111111110100"},
	{"11111111001",
	"1111111111110101",
	"1111111111110110",
	"1111111111110111",
	"1111111111111000",
	"1111111111111001",
	"1111111111111010",
	"1111111111111011",
	"1111111111111100",
	"1111111111111101",
	"1111111111111110"}};
}
